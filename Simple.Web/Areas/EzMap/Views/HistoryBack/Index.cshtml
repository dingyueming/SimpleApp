
@{
    ViewData["Title"] = "历史回放";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Version"] = "20200106";
}
<link rel="stylesheet" type="text/css" href="http://39.104.61.84:9001/EzServerClient/lib/EzServerClient.min.css">
<link rel="stylesheet" type="text/css" href="http://39.104.61.84:9001/EzServerClient/mapDemopage/css/popup.css">
<script src="http://39.104.61.84:9001/EzServerClient/lib/EzMapAPI.js"></script>
<script src="http://39.104.61.84:9001/EzServerClient/lib/EzServerClient.min.js"></script>

@section style{
    <!--ztree-->
    <link rel="stylesheet" href="~/lib/ztree/css/zTreeStyle/zTreeStyle.css" type="text/css">
    <!-- daterange picker -->
    <link rel="stylesheet" href="~/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <!--vue-treeselect-->
    <link rel="stylesheet" href="~/lib/vue-treeselect/dist/vue-treeselect.min.css">
}
@section script{
    <script src="~/plugins/ezMap/js/MapTools.js"></script>
    <!-- date-range-picker -->
    <script src="~/bower_components/moment/min/moment.min.js"></script>
    <script src="~/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
    <!--ztree-->
    <script type="text/javascript" src="~/lib/ztree/js/jquery.ztree.core.js"></script>
    <script type="text/javascript" src="~/lib/ztree/js/jquery.ztree.exhide.js"></script>
    <script type="text/javascript" src="~/lib/ztree/js/jquery.ztree.excheck.js"></script>
    <script type="text/javascript" src="~/lib/ztree/js/jquery.ztree.exedit.js"></script>
    <script type="text/javascript" src="~/lib/ztree/demo/js/fuzzysearch.js"></script>
    <!--vue-treeselect-->
    <script src="~/lib/vue-treeselect/dist/vue-treeselect.umd.min.js"></script>
}
<div class="box">
    <div class="row">
        <div class="col-md-12" id="vmForm">
            <form class="form-inline" role="form" style="margin:5px 5px 5px 5px;">
                <div class="form-group">
                    <label class="control-label">设备</label>
                </div>
                <div class="form-group">
                    @*<input type="text" class="form-control" v-model="search.deviceid" placeholder="请选择设备">*@
                    <treeselect v-model="search.deviceid" :multiple="false" :load-options="loadOptions" :options="options" style="width:300px;" />
                </div>
                <div class="form-group">
                    <label class="control-label">回放时间</label>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-clock-o"></i>
                        </div>
                        <input type="text" class="form-control" style="width:290px;" id="reservationtime">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label">最小速度</label>
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" v-model="search.minspeed" style="width:50px;">
                </div>
                <div class="checkbox">
                    <label>
                        <input type="checkbox" v-model="search.zerospeed" checked>不播放速度为0的点
                    </label>
                </div>
                <button type="button" v-on:click="play" class="btn btn-default">回放</button>
                @*<button type="button" class="btn btn-default">暂停</button>
                <button type="button" class="btn btn-default">继续</button>*@
            </form>
        </div>
    </div>
</div>
<div>
    <div class="row">
        <div class="col-md-12">
            <div id="map" style="width:100%;height:478px;"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">定位信息</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <!-- /.box-header -->
                <div id="vmHistory" class="box-body no-padding" style="overflow:auto; height:206px;">
                    <table class="table table-condensed">
                        <tr>
                            <th>序号</th>
                            <th>车牌号</th>
                            <th>识别码</th>
                            <th>SIM卡</th>
                            <th>时间</th>
                            <th>速度</th>
                            <th>定位</th>
                            <th>方向</th>
                            <th>状态</th>
                            <th>定位模式</th>
                            <th>累计里程</th>
                            <th>位置</th>
                            <th>经度</th>
                            <th>纬度</th>
                        </tr>
                        <tr v-for="(newtrack,index) in newtracks">
                            <td>{{index+1}}</td>
                            <td>{{newtrack.license}}</td>
                            <td>{{newtrack.mac}}</td>
                            <td>{{newtrack.sim}}</td>
                            <td>{{newtrack.gnsstime}}</td>
                            <td>{{newtrack.speed}}</td>
                            <td>{{newtrack.locate_str}}</td>
                            <td>{{newtrack.heading_str}}</td>
                            <td>{{newtrack.status}}</td>
                            <td>{{newtrack.locatemode_str}}</td>
                            <td>{{newtrack.mileage}}</td>
                            <td>{{newtrack.position}}</td>
                            <td>{{newtrack.longitude}}</td>
                            <td>{{newtrack.latitude}}</td>
                        </tr>
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
        <!-- /.col -->
    </div>
</div>

<script>
    const simulateAsyncOperation = fn => {
        setTimeout(fn, 2000)
    };
    //定义全局变量
    var deviceList;//定位设备列表
    //获取当前用户所拥有的设备
    function getDeviceList() {
        $.ajax({
            type: 'post',
            url: '@Url.Action("QueryDeviceList","RealtimeMap")',
            success: function (datas) {
                deviceList = datas;
            },
            error: function (e) {
                console.log(e);
            }
        });
    }
    //根据carid获取车辆
    function getCarByCarID(carid) {
        if (Array.isArray(deviceList)) {
            for (var i = 0; i < deviceList.length; i++) {
                if (deviceList[i].carid === carid) {
                    return deviceList[i];
                }
            }
        }
    }
    /**
    * 这里的map为上文HTML中新建的地图容器ID号；
    * 下面一行代码便可以加载地图到browser上,前提是
    * 在EzMapAPI.js中设置了相应的参数（具体查看EzMapAPI.js）
    */
    var map = new EzMap("map");
    // 添加地图控件 (级别控制条，也可以选择不添加)
    map.showStandMapControl();
    //显示比例尺
    map.showScaleControl();
    //设置地图级别
    map.zoomTo(5);
    //设置中心点
    var centerCoord = new EzCoord(106.661876, 26.609144);
    map.centerAtLatlng(centerCoord);
    //vue
    // register the component
    Vue.component('treeselect', VueTreeselect.Treeselect);
    var vmForm = new Vue({
        el: '#vmForm',
        data: {
            search: {
                minspeed: 0,
                zerospeed: true,
                starttime: '@DateTime.Now.ToString("yyyy/MM/dd 00:00")',
                endtime: '@DateTime.Now.ToString("yyyy/MM/dd HH:mm")',
                deviceid: null
            },
            // define options
            options:  [{
                id: 'unit-0',
                label: '市局',
                children: null,
            }],
        },
        methods: {
            play: function () {
                axios.post('@Url.Action("QueryHistoryBackData")', Qs.stringify(this.search))
                    .then(function (response) {
                        this.newtracks = response.data; //debugger;
                        if (Array.isArray(newtracks)) {
                            if (newtracks.length > 0) {
                                //设置地图级别
                                map.zoomTo(12);
                                 //marker点
                                var icon = new EzIcon({
                                    src: '@Url.Content("~/plugins/ezMap/images/")' +getCarStateIcon(newtracks[0]),//item.iconImage
                                    anchor: [0.5, 1],
                                    anchorXUnits: 'fraction',
                                    anchorYUnits: 'fraction',
                                    opacity: 1
                                });
                                var position = new EzCoord(newtracks[0].longitude, newtracks[0].latitude);
                                var marker = new EzMarker(position, icon);
                                map.addOverlay(marker);
                                //设置中心点
                                map.centerAtLatlng(position);

                                //设定一个计时器
                                var i = 0;
                                var t = setInterval(function () {
                                    var lastTrackData = newtracks[i];
                                    var dev = getCarByCarID(lastTrackData.carid);
                                    if (dev) {
                                        vmHistory.newRow.license = dev.license;
                                        vmHistory.newRow.mac = dev.mac;
                                        vmHistory.newRow.sim = dev.sim;
                                        vmHistory.newRow.gnsstime = lastTrackData.gnsstime;
                                        vmHistory.newRow.speed = lastTrackData.speed;
                                        vmHistory.newRow.locate_str = lastTrackData.locatE_STR;
                                        vmHistory.newRow.heading_str = lastTrackData.headinG_STR;
                                        vmHistory.newRow.status = lastTrackData.status;
                                        vmHistory.newRow.locatemode_str = lastTrackData.locatemodE_STR;
                                        vmHistory.newRow.mileage = lastTrackData.kilometre;
                                        vmHistory.newRow.position = lastTrackData.position;
                                        vmHistory.newRow.longitude = lastTrackData.longitude;
                                        vmHistory.newRow.latitude = lastTrackData.latitude;
                                        vmHistory.addRow();
                                    }
                                    i++;
                                     //新位置
                                    var newpos = new EzCoord(lastTrackData.longitude, lastTrackData.latitude);
                                    //设置图标
                                    var icon = new EzIcon({
                                        src: '@Url.Content("~/plugins/ezMap/images/run.png")',//item.iconImage + getCarStateIcon(newtrack)
                                        anchor: [0.5, 1],
                                        anchorXUnits: 'fraction',
                                        anchorYUnits: 'fraction',
                                        opacity: 1
                                    });
                                    marker.setIcon(icon);
                                    marker.setPoint(newpos);
                                }, 1000);
                            } else {
                                alert("无可播放的数据");
                            }
                        }
                    })
                    .catch(function (error) { // 请求失败处理
                        console.log(error);
                    });
            },
            loadOptions({ action, parentNode, callback }){
                axios.post('@Url.Action("QueryDeviceTree")')
                    .then(function (response) {
                        if (action == "LOAD_CHILDREN_OPTIONS") {
                            switch (parentNode.id) {
                                case 'unit-0': {
                                    simulateAsyncOperation(() => {
                                        parentNode.children = response.data;
                                        callback()
                                    })
                                    break
                                }
                                default: /* empty */
                            }
                        }
                    })
                    .catch(function (error) { //请求失败处理
                        console.log(error);
                    });
            }
        },
        mounted: function () {
            //初始化时间控件
            $('#reservationtime').daterangepicker({
                timePicker: true,
                timePickerIncrement: 30,
                locale: { format: 'YYYY/MM/DD HH:mm' }
            });
            $('#reservationtime').on('apply.daterangepicker', function (ev, picker) {
                vmForm.search.starttime = picker.startDate.format('YYYY/MM/DD HH:mm');
                vmForm.search.endtime = picker.endDate.format('YYYY/MM/DD HH:mm');
            });
            getDeviceList();
        }
    });
</script>

<script>
    var vmHistory = new Vue({
        el: '#vmHistory',
        data: {
            checkAll: false,// 是否全选
            checkedRows: [],// 选中的行标，用于删除行
            newtracks: [],// 表格数据
            newRow: {}// 新增的行数据，用于新增行
        },
        methods: {
            queryRealTimeData: function () {

            },
            addRow: function () {
                this.newtracks.push(this.newRow);//新行数据追加至表格数据数组中
                this.newRow = {};//新行数据置空
            }
        }
    });
</script>