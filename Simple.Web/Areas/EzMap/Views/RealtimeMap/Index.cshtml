
@{
    ViewData["Title"] = "实时监控";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Version"] = "20191219";
}
@*@section style{*@
<link rel="stylesheet" type="text/css" href="http://39.104.61.84:9001/EzServerClient/lib/EzServerClient.min.css">
<link rel="stylesheet" type="text/css" href="http://39.104.61.84:9001/EzServerClient/mapDemopage/css/popup.css">
<!--ztree-->
@*<link rel="stylesheet" href="~/lib/ztree/css/demo.css" type="text/css">*@
<link rel="stylesheet" href="~/lib/ztree/css/zTreeStyle/zTreeStyle.css" type="text/css">
@* } *@
@*@section script{*@
<script src="http://39.104.61.84:9001/EzServerClient/lib/EzMapAPI.js"></script>
<script src="http://39.104.61.84:9001/EzServerClient/lib/EzServerClient.min.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="~/plugins/ezMap/js/MapTools.js"></script>
<!--ztree-->
<script type="text/javascript" src="~/lib/ztree/js/jquery.ztree.core.js"></script>
<script type="text/javascript" src="~/lib/ztree/js/jquery.ztree.exhide.js"></script>
<script type="text/javascript" src="~/lib/ztree/js/jquery.ztree.excheck.js"></script>
<script type="text/javascript" src="~/lib/ztree/js/jquery.ztree.exedit.js"></script>
<script type="text/javascript" src="~/lib/ztree/demo/js/fuzzysearch.js"></script>
@* } *@
@*tree*@
<!-- Main row -->
<div class="row">
    <!-- /.col -->
    <div class="col-md-2" id="vmDeviceTree">
        <!-- Info Boxes Style 2 -->
        <!-- PRODUCT LIST -->
        <div class="box box-primary" style="width:275px;">
            <div class="box-header with-border">
                <h4 class="box-title">设备列表</h4>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
                <input type="text" id="key" value="" style="width:100%;" class="empty" placeholder="请输入关键字" /><br />
                <ul id="treeDemo" class="ztree" style="border:0px; height:440px;width:100%; margin-top:3px; overflow:auto;"></ul>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
    <!-- /.col -->
    <div class="col-md-10">
        <!-- MAP & BOX PANE -->
        <div class="box box-success">
            <div class="box-header with-border">
                <h4 class="box-title">实时地图</h4>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body no-padding">
                <div class="row">
                    <div class="col-md-12 col-sm-12">
                        <div class="pad">
                            <!-- Map will be created here -->
                            <!-- 提供地图容器，其中地图容器必须提供id号，用于生成地图 -->
                            <div id="map" style="width:100%;height:469px;"></div>
                        </div>
                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>
<div class="row" id="vmRealTime">
    <div class="col-md-12">
        <div class="box">
            <div class="box-header">
                <h3 class="box-title">实时定位数据</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body no-padding" style="overflow:auto; height:200px;">
                <table class="table table-condensed">
                    <tr>
                        <th>序号</th>
                        <th>设备编号</th>
                        <th>设备名称</th>
                        <th>设备状态</th>
                        <th>采购日期</th>
                        <th>设备管理员</th>
                    </tr>
                    <tr v-for="(facility,index) in facilities">
                        <td>{{index+1}}</td>
                        <td>{{facility.code}}</td>
                        <td>{{facility.name}}</td>
                        <td>{{facility.states}}</td>
                        <td>{{facility.date}}</td>
                        <td>{{facility.admin}}</td>
                    </tr>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>
<!-- /.row -->
<!--Map-->
<script>
    //定义全局变量
    var deviceList;//定位设备列表
    //获取当前用户所拥有的设备
    function getDeviceList(callback) {
        $.ajax({
            type: 'post',
            url: '@Url.Page("/CarStatus", "CarList", new { area="EmergencyCommand"})',
            headers: { "RequestVerificationToken": GetRequestVerificationToken() },
            data: {},
            success: function (datas) {
                carList = datas;
                //if (isFunction(callback))
                callback();
            },
            error: function (e) {
                console.log(e);
            }
        });
    }
    //获取设备最后一次定位的数据
    function getLastTrackList(callback) {
        $.ajax({
            type: 'POST',
            url: '@Url.Page("/CarStatus", "CarTrack", new { area="EmergencyCommand"})',
            headers: { "RequestVerificationToken": GetRequestVerificationToken() },
            success: function (datas) {
                //if (isFunction(callback))
                callback(datas);
            },
            error: function (e) {
                console.log(e);
            }
        });
    }
    /**
     * 这里的map为上文HTML中新建的地图容器ID号；
     * 下面一行代码便可以加载地图到browser上,前提是
     * 在EzMapAPI.js中设置了相应的参数（具体查看EzMapAPI.js）
     */
    var map = new EzMap("map");
    // 添加地图控件 (级别控制条，也可以选择不添加)
    map.showStandMapControl();
    //设置地图级别
    map.zoomTo(5);
    //设置中心点
    var centerCoord = new EzCoord(116, 40);
    map.centerAtLatlng(centerCoord);
    //获取当前用户所要定位的设备
    getDeviceList(function () {
        //获取设备最后一次定位的数据
        getLastTrackList(function (lastTrackList) {
            if (Array.isArray(lastTrackList)) {
                lastTrackList.forEach(function (lastTrackData, index, arr) {
                    var device = getDeviceByMac(lastTrackData.MAC);
                    if (device) {
                        device.lastTrackData = lastTrackData;
                        var icon = new EzIcon({
                            src: '@Url.Content("~/plugins/ezMap/images/")'+getCarStateIcon(data),//item.iconImage
                            anchor: [0.5, 1],
                            anchorXUnits: 'fraction',
                            anchorYUnits: 'fraction',
                            opacity: 1
                        });
                        //marker点
                        var position = new EzCoord(lastTrackData.LONGITUDE, lastTrackData.LATITUDE);
                        var marker = new EzMarker(position, icon);
                        map.addOverlay(marker);
                        device.marker = marker;
                    }
                });
            }
        });
    });
    //更新设备位置
    function updateGpsData(lastTrackData) {
        if (!checkLoLa(data.LONGITUDE, data.LATITUDE)) return;
        var device = getDeviceByMac(data.MAC);
        if (device) {
            device.lastTrackData = lastTrackData;
            var newpos = new EzCoord(lastTrackData.LONGITUDE, lastTrackData.LATITUDE);
            device.marker.setPoint(newpos);
        }
    }
    //更新实时定位数据
    function updateGpsTable(lastTrackData) {

    }
    //根据Mac获取设备
    function getDeviceByMac(mac) {
        if (isArray(carList)) {
            for (var i = 0; i < carList.length; i++) {
                if (carList[i].MAC === mac) {
                    return deviceList[i];
                }
            }
        }
    }
</script>
<!--Signal-->
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/mapHub")
        .configureLogging(signalR.LogLevel.Information)
        .build();
    connection.start().catch(err => console.error(err.toString()));
    connection.on("SendMessage", (user, message) => {
        const encodedMsg = user + " 说：" + message;
        const li = document.createElement("li");
        li.textContent = encodedMsg;
        document.getElementById("messagesList").appendChild(li);
        document.getElementById('message').value = null;
    });
    //connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
</script>
<!--VUE-->
<script>
    var vmRealTime = new Vue({
        el: '#vmRealTime',
        data: {
            checkAll: false,// 是否全选
            checkedRows: [],// 选中的行标，用于删除行
            facilities: [
                {
                    code: "A2017-001",
                    name: "3800充电器",
                    states: "正常",
                    date: "2017-01-21",
                    admin: "andy"
                },
                {
                    code: "A2017-002",
                    name: "Lenovo Type-c转接器",
                    states: "正常",
                    date: "2017-01-21",
                    admin: "zero"
                }],// 表格数据
            newRow: {}// 新增的行数据，用于新增行
        },
        methods: {
            queryRealTimeData: function () {

            },
            addRow: function () {
                this.facilities.push(this.newRow);//新行数据追加至表格数据数组中
                this.newRow = {};//新行数据置空
            }
        }
    });
    var vmDeviceTree = new Vue({
        el: '#vmDeviceTree',
        data: {
            deviceData:[],
        },
        methods: {
            queryDeviceData: function () {
                axios.post('@Url.Action("QueryDeviceList")')
                    .then(function (response) {
                        this.deviceData = response.data; //debugger;
                        $.fn.zTree.init($("#treeDemo"), setting, deviceData);
                        fuzzySearch('treeDemo', '#key', null, true); //初始化模糊搜索方法
                    })
                    .catch(function (error) { // 请求失败处理
                        console.log(error);
                    });
            }
        },
        mounted: function () {
            this.queryDeviceData();
        }
    });
</script>
<!--Jquery-->
<script>
    var setting = {
        check: {
            enable: true//checkbox
        },
        view: {
            nameIsHTML: true, //允许name支持html
            selectedMulti: false
        },
        edit: {
            enable: false,
            editNameSelectAll: false
        },
        data: {
            simpleData: {
                enable: true
            }
        }
    };
    //$(function () {

    //    vmDeviceTree.queryDeviceData();
    //});
</script>
